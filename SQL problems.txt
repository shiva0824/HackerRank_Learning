1. Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.

Query:

SELECT *
FROM CITY
WHERE POPULATION > 100000 AND COUNTRYCODE = 'USA';


2. Query the NAME field for all American cities in the CITY table with populations larger than 120000. The CountryCode for America is USA.

Query:

SELECT NAME
FROM CITY
WHERE POPULATION > 120000 AND COUNTRYCODE = 'USA';

3. Query all columns (attributes) for every row in the CITY table.

Query:

SELECT * FROM CITY;

4. Query all columns for a city in CITY with the ID 1661.

Query:

SELECT * 
FROM CITY
WHERE ID = 1661;

5. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.

Query:

SELECT * 
FROM CITY
WHERE COUNTRYCODE = 'JPN';

6. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.

Query:

SELECT NAME
FROM CITY
WHERE COUNTRYCODE = 'JPN';

7. Query a list of CITY and STATE from the STATION table.

Query:

SELECT CITY, STATE
FROM STATION;

8. Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE ID % 2 = 0;

9. Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.

Query:

SELECT (COUNT(CITY) - COUNT(DISTINCT CITY)) AS DIFF
FROM STATION;

10. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

Query:

SELECT CITY, length(CITY) 
FROM STATION 
ORDER BY length(CITY), CITY 
LIMIT 1; /* It selects Top most row */

SELECT CITY, length(CITY) 
FROM STATION 
ORDER BY length(CITY) DESC, CITY 
LIMIT 1;

11. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION.

Query:

SELECT CITY
FROM STATION
WHERE CITY LIKE 'a%' OR CITY LIKE 'e%' OR CITY LIKE 'i%' OR CITY LIKE 'o%' OR CITY LIKE 'u%';

ANOTHER SOLUTION:
select city from station where substring(city,1,1) in ('a','e','i','o','u') (**follow this)


12. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u';

ANOTHER SOLUTION:
SELECT DISTINCT CITY FROM STATION WHERE SUBSTRING(CITY,-1,1) IN ('a','e','i','o','u');

13. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE SUBSTRING(CITY,1,1) IN ('a','e','i','o','u') AND SUBSTRING(CITY,-1,1) IN ('a','e','i','o','u');

14. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u');

15. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE SUBSTRING(CITY,-1,1) NOT IN ('a','e','i','o','u');

16. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u') OR SUBSTRING(CITY,-1,1) NOT IN ('a','e','i','o','u');

17. Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

Query:

SELECT DISTINCT CITY
FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u') AND SUBSTRING(CITY,-1,1) NOT IN ('a','e','i','o','u');

18. Query the Name of any student in STUDENTS who scored higher than  Marks. 
Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), 
secondary sort them by ascending ID.

Query:

SELECT Name
FROM STUDENTS
WHERE Marks > 75
ORDER BY SUBSTRING(Name,-3,3), ID;

19. Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

Query:

SELECT name
FROM Employee
ORDER BY name;

20. Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  per month who have been employees for less than  months. Sort your result by ascending employee_id.

Query:

SELECT name
FROM Employee
WHERE salary > 2000 AND months < 10
ORDER BY employee_id;

21. Query the following two values from the STATION table:

a.The sum of all values in LAT_N rounded to a scale of  decimal places.
b.The sum of all values in LONG_W rounded to a scale of  decimal places.

Query:

SELECT ROUND(SUM(LAT_N), 2), ROUND(SUM(LONG_W), 2)
FROM STATION;

22. Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880  and less than 137.2345. Truncate your answer to  4 decimal places.

Query:

SELECT TRUNCATE(SUM(LAT_N), 4)
FROM STATION
WHERE LAT_N > 38.7880 AND LAT_N < 137.2345;

23. Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

Query:

SELECT TRUNCATE(MAX(LAT_N), 4)
FROM STATION
WHERE LAT_N < 137.2345;


24. Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places. (Complex q)

Query:

SELECT ROUND(LONG_W, 4)
FROM STATION
WHERE LAT_N < 137.2345
ORDER BY LAT_N DESC LIMIT 1;

25. Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7780. Round your answer to 4 decimal places.

Query:

SELECT ROUND(MIN(LAT_N), 4)
FROM STATION
WHERE LAT_N > 38.7780;


26. Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than 38.7780. Round your answer to 4 decimal places.

Query:

SELECT ROUND(LONG_W, 4)
FROM STATION
WHERE LAT_N > 38.7790
ORDER BY LAT_N LIMIT 1;

27. 
















